name: Terraform Apply - Custom
on:
  workflow_dispatch:
    inputs:
      firewall: 
        description: 'Deploy a firewall'
        required: true
        default: true
        type: boolean
      spokesCount:
        description: 'Number of spokes to deploy'
        required: true
        default: 2
        type: number
jobs:
  build:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: | 
          # Parse Azure secret into Terraform variables
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash          

      - name: Terraform Init
        id: init
        run: terraform -chdir=demo init

      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_firewall: ${{ github.event.inputs.firewall }}
          TF_VAR_spokes_count: ${{ github.event.inputs.spokesCount }}
        run: terraform -chdir=demo apply -auto-approve -no-color



          
        